# this will run on every push and build for mac/linux/windows (for a sanity-check)
# and on tags, it will create a release

name: Build & Release

on:
  push

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 21
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v4
        if: matrix.os != 'windows-latest'
        with:
          name: exe-demo-${{ matrix.os }}-x86_64
          path: |
            build/exe-demo
      - uses: actions/upload-artifact@v4
        if: matrix.os == 'windows-latest'
        with:
          name: exe-demo-${{ matrix.os }}
          path: |
            build/exe-demo.exe
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/checkout@v4
      - name: Grab Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Attach binaries to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          sudo apt-get update && sudo apt-get install -y hub
          assets=()
          for asset in ./artifacts/*; do
            zip "${asset}.zip" -r -j "${asset}"
            assets+=("-a" "${asset}.zip")
          done
          hub release edit "${assets[@]}" -m "Release ${{ github.ref_name }}" "${{ github.ref_name }}"
  


